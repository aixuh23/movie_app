{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movie","id","year","title","runtime","summary","poster","genres","className","src","alt","tilte","map","genre","indexNum","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRA6BeA,MAzBf,YAAoE,EAApDC,GAAqD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OACvD,OACA,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKP,EAAOQ,MAAOR,IACrC,sBAAKK,UAAU,aAAf,UACI,qBAAIA,UAAU,cAAd,oBAAoCL,KACpC,qBAAIK,UAAU,aAAd,mBAAkCN,KAClC,qBAAIM,UAAU,eAAd,oBAAqCD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OAAqB,oBAAmBN,UAAU,eAA7B,SAA6CK,GAApCC,SAC9E,qBAAIN,UAAU,gBAAd,sBAAwCJ,EAAxC,WACA,oBAAGI,UAAU,gBAAb,sBAAuCH,EAAQU,MAAM,EAAE,KAAvD,QACA,8BC6GGC,G,kNA9CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC4BC,IAAMC,IAAI,yDADtC,gBACUJ,EADV,EACHK,KAAOA,KAAML,OACpBM,QAAQC,IAAIP,GAGZ,EAAKQ,SAAS,CAACR,SAAQD,WAAW,IALxB,2C,kEAUVU,KAAKR,c,+BAGG,IAAD,EACqBQ,KAAKX,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OACA,yBAASX,UAAU,YAAnB,SACGU,EACC,qBAAKV,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,2BAGJ,qBAAKA,UAAU,SAAf,SACGW,EAAOP,KAAI,SAAAiB,GAAK,OACf,cAAC,EAAD,CAEE5B,GAAK4B,EAAM5B,GACXC,KAAM2B,EAAM3B,KACZC,MAAO0B,EAAM1B,MACbC,QAASyB,EAAMzB,QACfC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,QAPTsB,EAAM5B,e,GA/BL8B,IAAMC,YCvExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a723bd5a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, runtime, summary, poster, genres}) {\r\n    return (\r\n    <div className=\"movie\">\r\n        <img src={poster} alt={title} tilte={title}/>\r\n        <div className=\"movie_data\">\r\n            <h3 className=\"movie_title\">Title: {title}</h3>\r\n            <h5 className=\"movie_year\">Year: {year}</h5>\r\n            <ul className=\"movie_genres\">Genre: {genres.map((genre, indexNum) => <li key={indexNum} className=\"genres_genre\">{genre}</li>)}</ul>\r\n            <h5 className=\"movie_runtime\">Runtime: {runtime}(min)</h5>\r\n            <p className=\"movie_summary\">Summary: {summary.slice(0,200)}..</p>\r\n            <hr />\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    runtime: PropTypes.number.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\n//import PropTypes from 'prop-types';\nimport axios from \"axios\";\nimport Movie from \"./Movies\";\nimport \"./App.css\";\n\n/*const foodILike = [{id:1, name:\"Samgyeopsal\", rating: 5}, {id:2, name:\"Kimchi\", rating:4.3}, {id:3, name:\"Strawberry\", rating:3.7}];\n\nfunction Food({name, rating}) {\n  return (<div>\n    <h3>I like {name}</h3>\n    <h5>{rating}/5.0</h5>\n    </div>);\n}\n\nFood.propTypes = {\n  name:PropTypes.string.isRequired,\n  rating: PropTypes.number\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      {foodILike.map(dish => (<Food key={dish.id} name={dish.name} rating={dish.rating}/>))}\n    </div>\n  );\n}\n*/\n//필수적인 요소 -> App의 컴포넌트\n\n//react는 자동적으로 class method\n/*\nclass App extends React.Component{\n  constructor(_props) {\n    super(_props);\n    console.log(\"Im constructor\");\n  }\n\n  state = {\n    count: 0\n  };\n  //state는 object 이고, 데이터를 넣는 곳\n\n//javascript 함수\n  add = () => {\n    //console.log(\"add\");\n    this.setState (current => ({count:current.count +1}));\n    //setState를 호출할 때마다 react는 다시 render를 한다.\n  };\n  minus = () => {\n    //console.log(\"minus\");\n    this.setState(current => ({count:current.count -1}));\n  };\n\n  //component lifeCycle\n  componentDidMount(){\n    console.log(\"component rendered\");\n  }\n  componentDidUpdate(){\n    console.log(\"I just updated\");\n  }\n  componentWillUnmount(){\n    console.log(\"Goodbye, curel world\");\n  }\n  render(){\n    console.log(\"Im rendering\");\n    return (\n      <div>\n      <h1>The number is: {this.state.count}</h1>\n      <button onClick = {this.add}>Add</button>\n      <button onClick = {this.minus}>Minus</button>\n      </div>);\n  }\n}\n*/\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [] //state 선언은 필수가 아님!\n  };\n\n  getMovies = async () => {\n    const {data: {data:{movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    console.log(movies);\n    //{data: {data:{movies}}} == movies.data.data.movies\n\n    this.setState({movies, isLoading: false});\n    //({movies:movies}) == ({movies}) => state의 movies와 axois의 movies임\n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render() {\n    const {isLoading, movies} = this.state;\n    return (\n    <section className=\"container\">\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader_text_\"> Loading...</span>\n        </div>\n      ) : (\n      <div className=\"movies\">\n        {movies.map(movie =>(\n          <Movie \n            key={movie.id}\n            id ={movie.id} \n            year={movie.year} \n            title={movie.title}\n            runtime={movie.runtime} \n            summary={movie.summary} \n            poster={movie.medium_cover_image}\n            genres={movie.genres} />\n          ))}\n      </div>\n      )}\n      </section>\n    )}\n}\n\n//컴포넌트는 html을 반환하는 함수이다.\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//<App /> 이것이 바로 컴포넌트 => html을 반환하는 함수\n//javascript + html => jsx\n"],"sourceRoot":""}